name: Deploy Service
on:
  workflow_dispatch:

permissions:
  contents: read

defaults:
  run:
    shell: bash

env:
  # general cloud vars
  IBM_CLOUD_REGION: us-east
  ICR_REGION: global
  RESOURCE_GROUP: vest-labs
  # ICR vars
  REGISTRY_HOSTNAME: icr.io
  ICR_NAMESPACE: vest-testing
  DEPLOY_IMAGE_NAME: vest-watsonx-challenge
  DEPLOY_IMAGE_VERSION: ${{ github.sha }}
  # CE vars
  CE_PROJECT_ID: d4080f71-205d-47f1-9c08-56afed43d237
  APP_NAME: flask-test
  ICR_SECRET_NAME: ce-auto-icr-private-global
  PORT: 5000
  MIN_SCALE: 1
  MAX_SCALE: 5

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install IBM Cloud CLI and Plugins
        run: |
          curl -fsSL https://clis.cloud.ibm.com/install/linux | sh
          ibmcloud --version
          ibmcloud config --check-version=false
          ibmcloud plugin install -f code-engine
          ibmcloud plugin install -f container-registry

      - name: Authenticate with IBM Cloud CLI
        run: | 
          ibmcloud login --apikey "${{secrets.IBM_CLOUD_API_KEY}}" -r "${{env.IBM_CLOUD_REGION}}" -g "${{env.RESOURCE_GROUP}}"
          ibmcloud cr region-set "${{env.ICR_REGION}}"

      - name: Build Container Image
        run: |
          chmod +x ./create-image.sh
          sh ./create-image.sh
          echo "FULL_IMAGE_NAME=${{env.REGISTRY_HOSTNAME}}/${{env.ICR_NAMESPACE}}/${{env.DEPLOY_IMAGE_NAME}}:${{env.DEPLOY_IMAGE_VERSION}}" >> "$GITHUB_ENV"
          echo ${{env.FULL_IMAGE_NAME}}

      - name: Push the image to ICR
        run: |
          ibmcloud cr login
          docker push ${{env.FULL_IMAGE_NAME}}

      - name: Deploy Revision to Code Engine
        run: |
          ibmcloud ce project select --id ${{env.CE_PROJECT_ID}}
          ibmcloud ce application update --name ${{env.APP_NAME}} --port ${{env.PORT}} \
            --minscale ${{env.MIN_SCALE}} --maxscale ${{env.MAX_SCALE}} \
            --image private.${{env.FULL_IMAGE_NAME}} --rs ${{env.ICR_SECRET_NAME}}
          ibmcloud ce application get -n ${{env.APP_NAME}}
